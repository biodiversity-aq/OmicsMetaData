% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DataQC_Utils.R
\name{dataQC.TermsCheck}
\alias{dataQC.TermsCheck}
\title{make variable names in a dataset to comply to a standrad}
\usage{
dataQC.TermsCheck(observed=NA, exp.standard="MIxS", exp.section=NA, fuzzy.match=TRUE,out.type="full")
}
\arguments{
\item{observed}{character vector. The terms to be checked}

\item{exp.standard}{character. The expected standard to which he terms should comply. Either MIxS (Minimum Information on any x sequence), DwC (DarwinCore), INSDC (International Nucleotide Sequence Database Consortium).}

\item{exp.section}{character. Optionally an specific section standard where the terms should come from. When exp.standard is MIxS, the allowed sections are: core,  air, built_environment, host_associated, human_associated, human_gut, human_oral, human_skin, human_vaginal, microbial_mat_biofilm, miscellaneous_natural_or_artificial_environment, plant_associated, sediment, soil, wastewater_sludge, water. When exp.standard is DwC, the allowed sections are: event, occurence, emof}

\item{fuzzy.match}{logical. If TRUE, fuzzy matching will be done when no corresponding term is found in the Standard}

\item{out.type}{character. The type of the output. Either "full" (the output is a list of three lists: terms_OK=the correct terms, terms_wrongWithSolution = wrong terms with a proposed solution, and terms_notFound = terms that had no match), "logical" (output is logical vector for exact matches or not) or "best_match" (output returns a vector with the best matching terms). default full}
}
\value{
depending on out.type, either a boolean, or a list of length 3, with "$terms_OK" (terms that comply to the standard), "$terms_wrongWithSolution" (terms that do not comply to the standard but have a close match), and "$terms_notFound" (terms that do not comply to the standard, and that not match any term in it)
}
\description{
checks a set of terms (e.g. columnnames) to a Standard, and flags inconsistencies, gives solutions if possible.
}
\details{
For interoperability of data and data archiving, variable names in datasets need to comply to vocabulary standards. This function compares a list of existing terms to the MIxS or DwC standard, and tries to fiend the best matches.
}
\examples{
\donttest{
dataQC.TermsCheck(observed="ph", exp.standard="MIxS", exp.section=NA, fuzzy.match=TRUE,out.type="full")
dataQC.TermsCheck(observed="cond", exp.standard="MIxS", exp.section=NA, fuzzy.match=TRUE,out.type="full")
}
}
\seealso{
Other quality control functions: 
\code{\link{dataQC.LatitudeLongitudeCheck}()},
\code{\link{dataQC.TaxonListFromData}()},
\code{\link{dataQC.completeTaxaNamesFromRegistery}()},
\code{\link{dataQC.dateCheck}()},
\code{\link{dataQC.eventStructure}()},
\code{\link{dataQC.findNames}()},
\code{\link{dataQC.generate.footprintWKT}()},
\code{\link{dataQC.guess.env_package.from.data}()},
\code{\link{dataQC.taxaNames}()}
}
\author{
Maxime Sweetlove CC-0 2020
}
\concept{quality control functions}
